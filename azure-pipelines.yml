# Docker image, Azure Container Registry, and Azure Kubernetes Service
# Build a Docker image, push it to an Azure Container Registry, and deploy it to Azure Kubernetes Service.
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # ========================================================================
  #                          Mandatory variables 
  # ========================================================================

  # Update Azure.ResourceGroupName value with Azure resource group name.
  Azure.ResourceGroupName: 'shashbanpipelinesdotnetcore'

  # Update Azure.ServiceConnectionId value with AzureRm service endpoint.
  Azure.ServiceConnectionId: '3c886bd3-ba07-4bc5-b4b5-2e293b71b312'

  # Update Azure.Location value with Azure Location.
  Azure.Location: 'eastus'

  # Update ACR.Name value with ACR name. Please note ACR names should be all lower-case and alphanumeric only.
  ACR.Name: 'shashbanpipelinesdotnetcoree0c9'

  # Update AKS.ClusterName value Azure kubernetes cluster name.
  AKS.ClusterName: 'shashbanpipelinesdotnetcore'

  # Docker Container port
  Container.Port: 5000

  # ========================================================================
  #                           Optional variables 
  # ========================================================================

  ACR.RepositoryName: '$(ACR.Name)'
  ACR.ImageName: '$(ACR.Name):$(Build.BuildId)'
  ACR.FullName: '$(ACR.Name).azurecr.io'
  ACR.Sku: 'Standard'
  AKS.KubeDeploymentYaml: '$(System.DefaultWorkingDirectory)/KubeDeployment.yml' # Update AKS.KubeDeploymentYaml if you want to use deployment file from repo instead of generated file.
  AKS.DeploymentPort: '$(Container.Port)'
  Azure.CreateResources: 'false' # Update Azure.CreateResources to false if you have already created resources like resource group, azure container registry and azure kubernetes cluster.
  System.Debug: 'false'

stages:
  - stage: Build
    jobs:
    - job: CreateResources
      displayName: Create resources
      condition: and(succeeded(), eq(variables['Azure.CreateResources'], 'true'))

      pool: ProdPool


      steps:
      - task: AzureResourceGroupDeployment@2
        displayName: 'Azure Deployment:Create ACR and AKS'
        inputs:
          azureSubscription: '$(Azure.ServiceConnectionId)'
          resourceGroupName: '$(Azure.ResourceGroupName)'
          location: '$(Azure.Location)'
          templateLocation: 'URL of the file'
          addSpnToEnvironment: true
          csmFileLink: 'https://raw.githubusercontent.com/Microsoft/azure-pipelines-yaml/master/templates/resources/arm/aks.json'
          overrideParameters: '-registryName "$(ACR.Name)" -registryLocation "$(Azure.Location)" -servicePrincipalId $servicePrincipalId -servicePrincipalKey $servicePrincipalKey -clusterName "$(AKS.ClusterName)" -clusterLocation "$(Azure.Location)"'

    - job: BuildImage
      displayName: Build
      dependsOn: CreateResources
      condition: or(succeeded(), ne(variables['Azure.CreateResources'], 'true'))

      pool: ProdPool
      steps:
      - script: Echo "Build and Push image"
  - stage: test
    dependsOn: Build
    jobs:
      - deployment: deployWeb
        environment: smarthotel360-prod.abc-fe88
        pool: prodpool
        strategy:
          runOnce:
            deploy:
              steps:
              - script: echo kubectl get pods
                displayName: 'Getting pod details'
              - task: Kubernetes@1
                displayName: 'kubectl get'
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: ajAksCluster-abc-fe88-Prod
                  namespace: 'abc-fe88'
                  command: get
                  arguments: pods
      - job: test
        displayName: Test
        dependsOn: deployWeb
        condition: succeeded()
        pool: ProdPool
        steps:
          - task: Kubernetes@1
            displayName: 'kubectl get'
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: ajAksCluster-abc-fe88-Prod
              namespace: 'abc-fe88'
              command: get
              arguments: pods