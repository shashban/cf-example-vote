# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'b8d72312-ee7a-49b9-8b99-77f27fefb42d'
  imageRepository: 'shashbanexamplevote'
  containerRegistry: 'atulmakshelm.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Kubernetes Namespace
  k8sNamespace: 'default'
  imagePullSecret: 'atulmakshelm538a-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'manifests'
        targetPath: 'manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        downloadPath: '$(System.ArtifactsDirectory)/manifests'

    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'kodeAKS-default'
        namespace: '$(k8sNamespace)'
        secretType: 'dockerRegistry'
        secretName: '$(imagePullSecret)'
        dockerRegistryEndpoint: '$(dockerRegistryServiceConnection)'
        
    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes cluster
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'kodeAKS-default'
        namespace: '$(k8sNamespace)'
        manifests: |
          $(System.ArtifactsDirectory)/manifests/deployment.yml
          $(System.ArtifactsDirectory)/manifests/service.yml
        containers: '$(containerRegistry)/$(imageRepository):$(tag)'
        imagePullSecrets: '$(imagePullSecret)'
